{"version":3,"sources":["parameters/variants.ts","contexts/TaskReducer.tsx","contexts/Types/types.ts","contexts/AddToDone.tsx","helpers/uniqueId.tsx","contexts/TaskContext.tsx","components/DoneTasks/ButtonSet.tsx","components/DoneTasks/MoreInfo.tsx","components/DoneTasks/DoneTasks.tsx","contexts/EditTaskContext.tsx","components/EditTask/EditForm.tsx","components/EditTask/EditTask.tsx","components/YourTasks/ButtonSet.tsx","components/YourTasks/YourTasks.tsx","components/Error/Error.tsx","components/Success/Success.tsx","components/AddTask/TaskTitle.tsx","components/AddTask/TaskDescription.tsx","components/AddTask/TaskDate.tsx","components/AddTask/AddTask.tsx","parameters/config.ts","components/Header/Header.tsx","components/Nav/NavBar.tsx","ToDoList.tsx","index.tsx"],"names":["showFormVaraints","initial","scaleY","opacity","x","animate","exit","showDoneTaskVariants","y","expandVariants","height","successVaraints","errorVariants","rotate","scale","yourTaskVariants","staggerBtnVariantsConteiner","transition","staggerChildren","btnVariants","editVariants","visible","rotateX","hidden","left","state","action","type","payload","filter","id","taskToEdit","task","isEdited","initialState","localStorage","getItem","JSON","parse","DoneTasksContext","createContext","DoneTaskProvider","children","useReducer","TaskReducer","doneTaskState","dispatch","useEffect","setItem","stringify","Provider","value","uniqueId","newId","checkIfIdExist","some","s","TaskContext","TaskContextProvider","ButtonSet","props","doneDispatch","useContext","div","className","variants","button","onClick","DeleteForever","doneDate","Cached","MoreInfo","expand","setExpand","duration","ease","description","date","ExpandMore","DoneTasks","useState","length","section","map","index","article","key","positionTransition","title","p","EditTaskContext","EditTaskContextProvider","editedState","EditForm","newValue","setNewValue","htmlFor","name","onChange","e","target","EditTask","editDispatch","onSubmit","preventDefault","newTask","editTaskByID","addToDoneDispatch","Date","toLocaleString","Done","displayEditForm","Edit","YourTasks","Error","messages","push","message","li","Success","TaskTitle","changeInputHandler","autoComplete","TaskDescription","TaskDate","links","pathname","text","routes","path","component","setNewTask","error","setError","success","setSuccess","submited","setSubmit","timer","setTimeout","clearTimeout","form","createTaskHandler","Header","NavBar","history","setHistory","update","setUpdate","prevNumber","currentNumber","location","useLocation","shift","forEach","route","undefined","h","link","exact","to","data-text","ToDoList","basename","render","exitBeforeEnter","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3d10fb1.chunk.js","sourcesContent":["export const showFormVaraints = {\r\n  initial: { scaleY: 0, opacity: 0, x: 400 },\r\n  animate: { scaleY: 1, opacity: 1, x: 0 },\r\n  exit: { scaleY: 0 },\r\n};\r\n\r\nexport const showDoneTaskVariants = {\r\n  animate: { y: 0, opacity: 1 },\r\n  initial: { y: -100, opacity: 0 },\r\n  exit: { scaleY: 0 },\r\n};\r\n\r\nexport const expandVariants = {\r\n  animate: { height: \"auto\", opacity: 1 },\r\n  initial: { height: 0, opacity: 0 },\r\n  exit: { height: 0, opacity: 0 },\r\n};\r\n\r\nexport const successVaraints = {\r\n  animate: { y: 0 },\r\n  initial: { y: -100, x: \"-50%\" },\r\n  exit: { x: 100, opacity: 0 },\r\n};\r\n\r\nexport const errorVariants = {\r\n  animate: { opacity: 1, y: 0 },\r\n  initial: { opacity: 0, y: 40 },\r\n  exit: { rotate: 40, opacity: 0, scale: 0 },\r\n};\r\n\r\nexport const yourTaskVariants = {\r\n  initial: { scaleY: 0 },\r\n  animate: { scaleY: 1 },\r\n  exit: { scaleY: 0 },\r\n};\r\n\r\nexport const staggerBtnVariantsConteiner = {\r\n  initial: { opacity: 0, y: 40 },\r\n  animate: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      staggerChildren: 0.2,\r\n    },\r\n  },\r\n};\r\n\r\nexport const btnVariants = {\r\n  initial: { opacity: 0, y: 40 },\r\n  animate: { opacity: 1, y: 0 },\r\n};\r\n\r\nexport const editVariants = {\r\n  visible: { opacity: 1, rotateX: 0 },\r\n  hidden: { opacity: 0, rotateX: 180 },\r\n  left: { opacity: 0.3, scale: 0 },\r\n};\r\n","import { ITask } from \"../parameters/interfaces\";\r\nimport {\r\n  ADD_TO_EDIT,\r\n  DELETE_TASK,\r\n  ADD_TO_DONE,\r\n  ADD_TASK,\r\n  EDIT_TASK,\r\n} from \"./Types/types\";\r\n\r\nexport default (state: ITask[], action: any) => {\r\n  switch (action.type) {\r\n    case ADD_TASK:\r\n      return [...state, action.payload];\r\n\r\n    case ADD_TO_DONE:\r\n      return [...state, action.payload];\r\n\r\n    case DELETE_TASK:\r\n      return state.filter((state) => state.id !== action.payload);\r\n\r\n    case ADD_TO_EDIT:\r\n      if (action.payload.taskToEdit === null) return { ...state, task: [] };\r\n      return {\r\n        isEdited: action.payload.isEdited,\r\n        task: [action.payload.taskToEdit],\r\n      };\r\n\r\n    case EDIT_TASK:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_TASK = \"ADD_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const EDIT_TASK = \"EDIT_TASK\";\r\nexport const ADD_TO_DONE = \"ADD_TO_DONE\";\r\nexport const ADD_TO_EDIT = \"ADD_TO_EDIT\";\r\nexport const SET_EDIT_TASK = \"SET_EDIT_TASK\";\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport TaskReducer from \"./TaskReducer\";\r\nimport { AddToDoneActions } from \"./Types/addToDoneTypes\";\r\nimport { ITask } from \"../parameters/interfaces\";\r\n\r\ninterface IDoneContext {\r\n  doneTaskState: ITask[];\r\n  dispatch: React.Dispatch<AddToDoneActions>;\r\n}\r\n\r\nconst initialState: IDoneContext = localStorage.getItem(\"doneTask\")\r\n  ? JSON.parse(localStorage.getItem(\"doneTask\") || \"\")\r\n  : [];\r\n\r\nexport const DoneTasksContext = createContext(initialState);\r\n\r\nconst DoneTaskProvider: React.FC = ({ children }): JSX.Element => {\r\n  const [doneTaskState, dispatch]: [ITask[], any] = useReducer(\r\n    TaskReducer,\r\n    initialState\r\n  );\r\n\r\n  useEffect(\r\n    () => localStorage.setItem(\"doneTask\", JSON.stringify(doneTaskState)),\r\n    [doneTaskState]\r\n  );\r\n\r\n  return (\r\n    <DoneTasksContext.Provider value={{ doneTaskState, dispatch }}>\r\n      {children}\r\n    </DoneTasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DoneTaskProvider;\r\n","interface Istate {\r\n  id: number;\r\n}\r\n\r\nexport function uniqueId<T extends Istate>(state: T[]): number {\r\n  let newId: number = 0;\r\n\r\n  function checkIfIdExist() {\r\n    if (state.some((s) => s.id === newId)) {\r\n      newId++;\r\n      checkIfIdExist();\r\n    }\r\n  }\r\n  checkIfIdExist();\r\n\r\n  return newId;\r\n}\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport TaskReducer from \"./TaskReducer\";\r\nimport { ITask } from \"../parameters/interfaces\";\r\nimport { AddActions } from \"./Types/actionTypes\";\r\n\r\ninterface ITaskContext {\r\n  state: ITask[];\r\n  dispatch: React.Dispatch<AddActions>;\r\n}\r\n\r\nlet initialState: ITaskContext = localStorage.getItem(\"task\")\r\n  ? JSON.parse(localStorage.getItem(\"task\") || \"\")\r\n  : [];\r\n\r\nexport const TaskContext = createContext<ITaskContext>(initialState);\r\n\r\nconst TaskContextProvider: React.FC = ({ children }): JSX.Element => {\r\n  const [state, dispatch]: [ITask[], any] = useReducer(\r\n    TaskReducer,\r\n    initialState\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"task\", JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return (\r\n    <TaskContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  staggerBtnVariantsConteiner,\r\n  btnVariants,\r\n} from \"../../parameters/variants\";\r\nimport { DeleteForever, Cached } from \"@material-ui/icons\";\r\nimport { uniqueId } from \"../../helpers/uniqueId\";\r\nimport { ADD_TASK, DELETE_TASK } from \"../../contexts/Types/types\";\r\nimport { TaskContext } from \"../../contexts/TaskContext\";\r\nimport { AddToDoneActions } from \"../../contexts/Types/addToDoneTypes\";\r\nimport { ITask } from \"../../parameters/interfaces\";\r\n\r\ninterface IProps {\r\n  task: ITask;\r\n  dispatch: React.Dispatch<AddToDoneActions>;\r\n}\r\n\r\nexport default function ButtonSet(props: IProps) {\r\n  const { task, dispatch: doneDispatch } = props;\r\n  const { state, dispatch } = useContext(TaskContext);\r\n\r\n  const moveBackToTask = () => {\r\n    doneDispatch({ type: DELETE_TASK, payload: task.id });\r\n\r\n    delete task.doneDate;\r\n    task.id = uniqueId(state);\r\n    dispatch({ type: ADD_TASK, payload: task });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"title__btn-set\"\r\n      variants={staggerBtnVariantsConteiner}\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n    >\r\n      <motion.button\r\n        className=\"btn-set__btn \"\r\n        onClick={() => doneDispatch({ type: DELETE_TASK, payload: task.id })}\r\n        variants={btnVariants}\r\n      >\r\n        <DeleteForever />\r\n      </motion.button>\r\n      <motion.button\r\n        className=\"btn-set__btn\"\r\n        onClick={moveBackToTask}\r\n        variants={btnVariants}\r\n      >\r\n        <Cached />\r\n      </motion.button>\r\n    </motion.div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { expandVariants } from \"../../parameters/variants\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\nimport { ITask } from \"../../parameters/interfaces\";\r\n\r\ninterface MoreInfoProps {\r\n  task: ITask;\r\n  expand: null | number;\r\n  setExpand: React.Dispatch<React.SetStateAction<null | number>>;\r\n}\r\n\r\nexport default function MoreInfo({ task, expand, setExpand }: MoreInfoProps) {\r\n  return (\r\n    <div className=\"done-task__more-info\">\r\n      <AnimatePresence>\r\n        {expand === task.id && (\r\n          <motion.div\r\n            className=\"more-info__details\"\r\n            variants={expandVariants}\r\n            animate=\"animate\"\r\n            initial=\"initial\"\r\n            exit=\"exit\"\r\n            transition={{ duration: 0.2, ease: \"linear\", type: \"tween\" }}\r\n          >\r\n            <p className=\"details__description\">{task.description}</p>\r\n            <div className=\"details__date\">\r\n              <span>Should Have Done: {task.date}</span>\r\n              <span>Finised at: {task.doneDate}</span>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n      <button\r\n        className={\r\n          expand === task.id\r\n            ? \"more-info__expand-more more-info__expand-more--rotate \"\r\n            : \"more-info__expand-more \"\r\n        }\r\n        onClick={() => {\r\n          if (task.id === expand) return setExpand(null);\r\n          setExpand(task.id);\r\n        }}\r\n      >\r\n        <ExpandMore />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { showDoneTaskVariants } from \"../../parameters/variants\";\r\n\r\nimport \"./DoneTask.scss\";\r\n\r\nimport { DoneTasksContext } from \"../../contexts/AddToDone\";\r\n\r\nimport ButtonSet from \"./ButtonSet\";\r\nimport MoreInfo from \"./MoreInfo\";\r\n\r\nconst DoneTasks: React.FC = () => {\r\n  const { doneTaskState, dispatch } = useContext(DoneTasksContext);\r\n  const [expand, setExpand] = useState<null | number>(null);\r\n\r\n  if (!doneTaskState.length)\r\n    return (\r\n      <motion.p\r\n        className=\"no-match\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n      >\r\n        No Task Done\r\n      </motion.p>\r\n    );\r\n\r\n  return (\r\n    <motion.section\r\n      initial=\"initial\"\r\n      variants={showDoneTaskVariants}\r\n      animate=\"animate\"\r\n      exit=\"exit\"\r\n      className=\"done-tasks\"\r\n    >\r\n      {doneTaskState.map((task, index: number) => (\r\n        <motion.article\r\n          className=\"done-tasks__box\"\r\n          key={task.id}\r\n          positionTransition\r\n        >\r\n          <div className=\"done-tasks__title\">\r\n            <div className=\"title__heading-set\">\r\n              <span className=\"heading-set__index\">{index + 1}.</span>\r\n              <p className=\"heading-set__title\">{task.title}</p>\r\n            </div>\r\n            <ButtonSet task={task} dispatch={dispatch} />\r\n          </div>\r\n          <MoreInfo task={task} expand={expand} setExpand={setExpand} />\r\n        </motion.article>\r\n      ))}\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default DoneTasks;\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport TaskReducer from \"./TaskReducer\";\r\nimport { ITask } from \"../parameters/interfaces\";\r\nimport { EditActions } from \"./Types/editActionTypes\";\r\n\r\nexport interface IEditState {\r\n  task: ITask[];\r\n  isEdited: boolean;\r\n}\r\n\r\ninterface IEditContext {\r\n  editedState: IEditState;\r\n  dispatch: React.Dispatch<EditActions>;\r\n}\r\n\r\nlet initialState: any = {\r\n  task: [],\r\n  isEdited: false,\r\n};\r\n\r\nexport const EditTaskContext = createContext<IEditContext>(initialState);\r\n\r\nconst EditTaskContextProvider: React.FC = ({ children }): JSX.Element => {\r\n  const [editedState, dispatch]: [IEditState, any] = useReducer(\r\n    TaskReducer,\r\n    initialState\r\n  );\r\n\r\n  return (\r\n    <EditTaskContext.Provider value={{ editedState, dispatch }}>\r\n      {children}\r\n    </EditTaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default EditTaskContextProvider;\r\n","import React from \"react\";\r\nimport { ITask } from \"../../parameters/interfaces\";\r\n\r\ninterface EditFormProps {\r\n  newValue: ITask;\r\n  setNewValue: React.Dispatch<React.SetStateAction<ITask>>;\r\n}\r\n\r\nexport default function EditForm({ newValue, setNewValue }: EditFormProps) {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"edit-title\" className=\"edit-form__label\">\r\n        Edit Title\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"edit-title\"\r\n        name=\"edit-title\"\r\n        value={newValue.title}\r\n        onChange={(e) => setNewValue({ ...newValue, title: e.target.value })}\r\n        className=\"edit-form__input\"\r\n      />\r\n\r\n      <label htmlFor=\"edit-desc\" className=\"edit-form__label\">\r\n        Edit Description\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"edit-desc\"\r\n        name=\"edit-desc\"\r\n        value={newValue.description}\r\n        onChange={(e) =>\r\n          setNewValue({ ...newValue, description: e.target.value })\r\n        }\r\n        className=\"edit-form__input\"\r\n      />\r\n\r\n      <label htmlFor=\"edit-date\" className=\"edit-form__label\">\r\n        Edit Date\r\n      </label>\r\n      <input\r\n        type=\"date\"\r\n        id=\"edit-date\"\r\n        name=\"edit-date\"\r\n        value={newValue.date}\r\n        onChange={(e) => setNewValue({ ...newValue, date: e.target.value })}\r\n        className=\"edit-form__input\"\r\n      />\r\n\r\n      <button className=\"edit-form__edit-btn\" type=\"submit\">\r\n        Edit\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect, FormEvent } from \"react\";\r\nimport { ITask } from \"../../parameters/interfaces\";\r\nimport { motion } from \"framer-motion\";\r\nimport { editVariants } from \"../../parameters/variants\";\r\n\r\nimport \"./EditTask.scss\";\r\n\r\nimport { EditTaskContext } from \"../../contexts/EditTaskContext\";\r\nimport { TaskContext } from \"../../contexts/TaskContext\";\r\nimport { EDIT_TASK, ADD_TO_EDIT } from \"../../contexts/Types/types\";\r\nimport EditForm from \"./EditForm\";\r\n\r\nconst EditTask = () => {\r\n  const { editedState, dispatch: editDispatch } = useContext(EditTaskContext);\r\n  const { state, dispatch } = useContext(TaskContext);\r\n  const [newValue, setNewValue] = useState<ITask>({\r\n    title: \"\",\r\n    description: \"\",\r\n    date: \"\",\r\n    id: 0,\r\n  });\r\n\r\n  const editTaskByID = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    const { title, description, date, id } = newValue;\r\n    const newTask = state.map((task) =>\r\n      task.id === id ? { title, description, id, date } : task\r\n    );\r\n    dispatch({ type: EDIT_TASK, payload: newTask });\r\n\r\n    editDispatch({\r\n      type: ADD_TO_EDIT,\r\n      payload: { isEdited: false, taskToEdit: null },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editedState.task.length) {\r\n      const [{ title, description, date, id }] = editedState.task;\r\n      setNewValue({\r\n        title: title,\r\n        description: description,\r\n        date: date,\r\n        id: id,\r\n      });\r\n    }\r\n  }, [editedState]);\r\n\r\n  return (\r\n    <motion.section\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"left\"\r\n      variants={editVariants}\r\n      className=\"edit-section\"\r\n    >\r\n      <form\r\n        action=\"#\"\r\n        className=\"edit-section__edit-form\"\r\n        onSubmit={(e) => editTaskByID(e)}\r\n      >\r\n        <EditForm setNewValue={setNewValue} newValue={newValue} />\r\n      </form>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React, { useContext } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  staggerBtnVariantsConteiner,\r\n  btnVariants,\r\n} from \"../../parameters/variants\";\r\nimport {\r\n  DELETE_TASK,\r\n  ADD_TO_EDIT,\r\n  ADD_TO_DONE,\r\n} from \"../../contexts/Types/types\";\r\nimport { uniqueId } from \"../../helpers/uniqueId\";\r\nimport { Done, Edit, DeleteForever } from \"@material-ui/icons\";\r\nimport { ITask } from \"../../parameters/interfaces\";\r\nimport { AddActions } from \"../../contexts/Types/actionTypes\";\r\nimport { DoneTasksContext } from \"../../contexts/AddToDone\";\r\nimport { IEditState } from \"../../contexts/EditTaskContext\";\r\nimport { EditActions } from \"../../contexts/Types/editActionTypes\";\r\n\r\ninterface ButtonSetProps {\r\n  task: ITask;\r\n  dispatch: React.Dispatch<AddActions>;\r\n  editedState: IEditState;\r\n  editDispatch: React.Dispatch<EditActions>;\r\n}\r\n\r\nexport default function ButtonSet(props: ButtonSetProps) {\r\n  const { dispatch, task, editDispatch, editedState } = props;\r\n  const { dispatch: addToDoneDispatch, doneTaskState } = useContext(\r\n    DoneTasksContext\r\n  );\r\n\r\n  const displayEditForm = (task: ITask) => {\r\n    if (!editedState.task.length)\r\n      editDispatch({\r\n        type: ADD_TO_EDIT,\r\n        payload: { isEdited: true, taskToEdit: task },\r\n      });\r\n    else if (editedState.task[0].id === task.id)\r\n      editDispatch({\r\n        type: ADD_TO_EDIT,\r\n        payload: { isEdited: false, taskToEdit: null },\r\n      });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"title-box__btn-set\"\r\n      variants={staggerBtnVariantsConteiner}\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n    >\r\n      <motion.button\r\n        className=\"btn-set__btn\"\r\n        variants={btnVariants}\r\n        onClick={() => {\r\n          const doneDate: string = new Date().toLocaleString();\r\n          dispatch({ type: DELETE_TASK, payload: task.id });\r\n\r\n          task.id = uniqueId(doneTaskState);\r\n          task.doneDate = doneDate;\r\n          addToDoneDispatch({ type: ADD_TO_DONE, payload: task });\r\n        }}\r\n      >\r\n        <Done />\r\n      </motion.button>\r\n      <motion.button\r\n        className={\r\n          editedState.task.length && editedState.task[0].id === task.id\r\n            ? \"btn-set__btn btn-set__btn--active\"\r\n            : \"btn-set__btn\"\r\n        }\r\n        variants={btnVariants}\r\n        onClick={() => displayEditForm(task)}\r\n      >\r\n        <Edit />\r\n      </motion.button>\r\n      <motion.button\r\n        variants={btnVariants}\r\n        className=\"btn-set__btn\"\r\n        onClick={() => dispatch({ type: DELETE_TASK, payload: task.id })}\r\n      >\r\n        <DeleteForever />\r\n      </motion.button>\r\n    </motion.div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport EditTask from \"../EditTask/EditTask\";\r\nimport ButtonSet from \"./ButtonSet\";\r\n\r\nimport \"./YourTask.scss\";\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { yourTaskVariants } from \"../../parameters/variants\";\r\n\r\nimport { TaskContext } from \"../../contexts/TaskContext\";\r\nimport { EditTaskContext } from \"../../contexts/EditTaskContext\";\r\n\r\nconst YourTasks: React.FC = () => {\r\n  const { state, dispatch } = useContext(TaskContext);\r\n  const { editedState, dispatch: editDispatch } = useContext(EditTaskContext);\r\n\r\n  if (!state.length)\r\n    return (\r\n      <motion.p\r\n        className=\"no-match\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n      >\r\n        No Tasks...\r\n      </motion.p>\r\n    );\r\n\r\n  return (\r\n    <motion.section\r\n      className=\"current-tasks\"\r\n      variants={yourTaskVariants}\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n      exit=\"exit\"\r\n    >\r\n      {state.map((task, index: number) => {\r\n        return (\r\n          <motion.article\r\n            key={task.id}\r\n            className=\"current-tasks__box\"\r\n            positionTransition\r\n          >\r\n            <AnimatePresence>\r\n              {editedState.task.length &&\r\n                editedState.task[0].id === task.id && <EditTask />}\r\n            </AnimatePresence>\r\n            <div className=\"current-tasks__title-box\">\r\n              <span className=\"title-box__number-task\">{index + 1}.</span>\r\n              <h5 className=\"title-box__title\">{task.title}</h5>\r\n              <ButtonSet\r\n                task={task}\r\n                editDispatch={editDispatch}\r\n                dispatch={dispatch}\r\n                editedState={editedState}\r\n              />\r\n            </div>\r\n            <div className=\"current-tasks__desc\">\r\n              <span className=\"desc__label\">Description:</span>\r\n              {task.description}\r\n            </div>\r\n            <div className=\"current-tasks__date\">\r\n              <span className=\"date__label\">Deadline:</span>\r\n              {task.date}\r\n            </div>\r\n          </motion.article>\r\n        );\r\n      })}\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default YourTasks;\r\n","import React from \"react\";\r\nimport { errorVariants } from \"../../parameters/variants\";\r\nimport { uniqueId } from \"../../helpers/uniqueId\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ITask } from \"../../parameters/interfaces\";\r\nimport \"./Error.scss\";\r\n\r\ninterface Imessage {\r\n  message: string;\r\n  id: number;\r\n}\r\n\r\nconst Error = ({ newTask }: { newTask: ITask }) => {\r\n  const messages: Imessage[] = [];\r\n\r\n  if (!newTask.title)\r\n    messages.push({\r\n      message: \"Title should be filled\",\r\n      id: uniqueId(messages),\r\n    });\r\n\r\n  if (!newTask.date) {\r\n    messages.push({\r\n      message: \"Date should be seted\",\r\n      id: uniqueId(messages),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <motion.section\r\n      variants={errorVariants}\r\n      animate=\"animate\"\r\n      initial=\"initial\"\r\n      exit=\"exit\"\r\n    >\r\n      <ul className=\"error-box\">\r\n        {messages.map(({ id, message }) => (\r\n          <motion.li\r\n            key={id}\r\n            className=\"error-box__error-name\"\r\n            positionTransition\r\n          >\r\n            {message}\r\n          </motion.li>\r\n        ))}\r\n      </ul>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { successVaraints } from \"../../parameters/variants\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./Success.scss\";\r\n\r\nexport default function Success() {\r\n  return (\r\n    <motion.section\r\n      className=\"success-alert\"\r\n      variants={successVaraints}\r\n      animate=\"animate\"\r\n      initial=\"initial\"\r\n      exit=\"exit\"\r\n    >\r\n      <h5>Task has added!</h5>\r\n    </motion.section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ITask } from \"../../parameters/interfaces\";\r\n\r\nexport interface TaskFormProps {\r\n  newTask: ITask;\r\n  changeInputHandler: (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => void;\r\n}\r\n\r\nexport default function TaskTitle({\r\n  newTask,\r\n  changeInputHandler,\r\n}: TaskFormProps) {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"add-task-title\" className=\"form__add-task-label\">\r\n        Task Title\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form__add-task-input\"\r\n        name=\"title\"\r\n        value={newTask.title}\r\n        id=\"add-task-title\"\r\n        autoComplete=\"off\"\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          changeInputHandler(e)\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TaskFormProps } from \"./TaskTitle\";\r\n\r\nexport default function TaskDescription({\r\n  newTask,\r\n  changeInputHandler,\r\n}: TaskFormProps) {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"add-task-desc\" className=\"form__add-task-label\">\r\n        Task Description\r\n      </label>\r\n      <textarea\r\n        name=\"description\"\r\n        value={newTask.description}\r\n        id=\"add-task-desc\"\r\n        className=\"form__add-task-input form__add-task-input--description\"\r\n        autoComplete=\"off\"\r\n        onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n          changeInputHandler(e)\r\n        }\r\n      ></textarea>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TaskFormProps } from \"./TaskTitle\";\r\n\r\nexport default function TaskDate({\r\n  newTask,\r\n  changeInputHandler,\r\n}: TaskFormProps) {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"task-deadline\" className=\"form__add-task-label\">\r\n        Select Deadline\r\n      </label>\r\n      <input\r\n        type=\"date\"\r\n        name=\"date\"\r\n        value={newTask.date}\r\n        id=\"task-deadline\"\r\n        className=\"form__add-task-input\"\r\n        autoComplete=\"off\"\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          changeInputHandler(e)\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Error from \"../Error/Error\";\r\nimport Success from \"../Success/Success\";\r\nimport \"./AddTask.scss\";\r\n\r\nimport { TaskContext } from \"../../contexts/TaskContext\";\r\nimport { uniqueId } from \"../../helpers/uniqueId\";\r\nimport { showFormVaraints } from \"../../parameters/variants\";\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { ITask } from \"../../parameters/interfaces\";\r\nimport TaskTitle from \"./TaskTitle\";\r\nimport TaskDescription from \"./TaskDescription\";\r\nimport TaskDate from \"./TaskDate\";\r\nimport { ADD_TASK } from \"../../contexts/Types/types\";\r\n\r\nconst AddTask: React.FC = () => {\r\n  const { state, dispatch } = useContext(TaskContext);\r\n  const [newTask, setNewTask] = useState<ITask>({\r\n    title: \"\",\r\n    description: \"\",\r\n    date: \"\",\r\n    id: 0,\r\n  });\r\n  const [error, setError] = useState<boolean>(false);\r\n  const [success, setSuccess] = useState<boolean>(false);\r\n  const [submited, setSubmit] = useState<boolean>(false);\r\n\r\n  const createTaskHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (error) return;\r\n\r\n    newTask.id = uniqueId(state);\r\n    dispatch({ type: ADD_TASK, payload: newTask });\r\n    setNewTask({ title: \"\", description: \"\", date: \"\", id: 0 });\r\n    setSuccess(true);\r\n    setSubmit(false);\r\n  };\r\n\r\n  const changeInputHandler = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => setNewTask({ ...newTask, [e.target.name]: e.target.value });\r\n\r\n  useEffect(() => {\r\n    if (!submited) return;\r\n    if (!newTask.title || !newTask.date) setError(true);\r\n    else setError(false);\r\n  }, [submited, newTask]);\r\n\r\n  useEffect(() => {\r\n    if (!success) return;\r\n    const timer = setTimeout(() => setSuccess(false), 3000);\r\n    return () => clearTimeout(timer);\r\n  }, [success]);\r\n\r\n  return (\r\n    <section>\r\n      <motion.form\r\n        action=\"#\"\r\n        className=\"form\"\r\n        onSubmit={(e) => createTaskHandler(e)}\r\n        variants={showFormVaraints}\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n        exit=\"exit\"\r\n        transition={{ type: \"tween\" }}\r\n      >\r\n        <AnimatePresence> {success && <Success />}</AnimatePresence>\r\n        <AnimatePresence>\r\n          {error && <Error newTask={newTask} />}\r\n        </AnimatePresence>\r\n        <TaskTitle newTask={newTask} changeInputHandler={changeInputHandler} />\r\n        <TaskDescription\r\n          newTask={newTask}\r\n          changeInputHandler={changeInputHandler}\r\n        />\r\n        <TaskDate newTask={newTask} changeInputHandler={changeInputHandler} />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"form__add-btn\"\r\n          onClick={() => setSubmit(true)}\r\n        >\r\n          Add Task\r\n        </button>\r\n      </motion.form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import DoneTasks from \"../components/DoneTasks/DoneTasks\";\r\nimport YourTasks from \"../components/YourTasks/YourTasks\";\r\nimport AddTask from \"../components/AddTask/AddTask\";\r\nimport { ILinks, IRoutes } from \"./interfaces\";\r\n\r\nexport const links: ILinks[] = [\r\n  { pathname: \"/addtask\", text: \"Add Task\", id: 0 },\r\n  { pathname: \"/\", text: \"Your Tasks\", id: 1 },\r\n  { pathname: \"/donetasks\", text: \"Your Done Tasks\", id: 2 },\r\n];\r\n\r\nexport const routes: IRoutes[] = [\r\n  { path: \"/addtask\", component: AddTask, id: 0 },\r\n  { path: \"/\", component: YourTasks, id: 1 },\r\n  { path: \"/donetasks\", component: DoneTasks, id: 2 },\r\n];\r\n","import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__heading\">To Do List</h1>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { links } from \"../../parameters/config\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { routes } from \"../../parameters/config\";\r\nimport \"./Nav.scss\";\r\n\r\nconst NavBar = () => {\r\n  const [history, setHistory] = useState<number[]>([]);\r\n  const [update, setUpdate] = useState<boolean>(false);\r\n  let [prevNumber, currentNumber] = history;\r\n  const location = useLocation();\r\n\r\n  if (history.length > 2) history.shift();\r\n\r\n  const updateHistory = () => {\r\n    routes.forEach((route, index: number) => {\r\n      if (\r\n        currentNumber === index ||\r\n        (currentNumber === undefined && prevNumber === index)\r\n      )\r\n        return;\r\n\r\n      if (route.path === location.pathname) setHistory((h) => [...h, index]);\r\n    });\r\n  };\r\n\r\n  useEffect(() => updateHistory(), [history, update]);\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className=\"nav__link-conteiner\">\r\n        {links.map((link) => (\r\n          <li className=\"nav__item\" key={link.id}>\r\n            <NavLink\r\n              exact\r\n              to={link.pathname}\r\n              className=\"nav__link\"\r\n              data-text={link.text}\r\n              onClick={() => setUpdate(!update)}\r\n            >\r\n              {link.text}\r\n            </NavLink>\r\n            <span\r\n              className={\r\n                prevNumber > currentNumber && currentNumber === link.id\r\n                  ? \"nav__overlay nav__overlay--slide-left\"\r\n                  : \"nav__overlay\" &&\r\n                    prevNumber > currentNumber &&\r\n                    prevNumber === link.id\r\n                  ? \"nav__overlay nav__overlay--slide-left-hide\"\r\n                  : \"nav__overlay\" &&\r\n                    prevNumber < currentNumber &&\r\n                    currentNumber === link.id\r\n                  ? \"nav__overlay nav__overlay--slide-right\"\r\n                  : \"nav__overlay\" &&\r\n                    prevNumber < currentNumber &&\r\n                    prevNumber === link.id\r\n                  ? \"nav__overlay nav__overlay--slide-right-hide\"\r\n                  : \"nav__overlay\" &&\r\n                    prevNumber === link.id &&\r\n                    currentNumber === undefined\r\n                  ? \"nav__overlay nav__overlay--slide-left\"\r\n                  : \"nav__overlay\"\r\n              }\r\n            ></span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./scss/App.scss\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { routes } from \"./parameters/config\";\r\n\r\nimport Header from \"./components/Header/Header\";\r\nimport NavBar from \"./components/Nav/NavBar\";\r\n\r\nimport TaskContextProvider from \"./contexts/TaskContext\";\r\nimport DoneTasksProvider from \"./contexts/AddToDone\";\r\nimport EditTaskContextProvider from \"./contexts/EditTaskContext\";\r\n\r\nconst ToDoList = () => {\r\n  return (\r\n    <Router basename=\"/\">\r\n      <Header />\r\n      <NavBar />\r\n      <main>\r\n        <TaskContextProvider>\r\n          <DoneTasksProvider>\r\n            <Route\r\n              render={({ location }) => (\r\n                <AnimatePresence exitBeforeEnter>\r\n                  <Switch location={location} key={location.pathname}>\r\n                    <EditTaskContextProvider>\r\n                      {routes.map((route) => (\r\n                        <Route\r\n                          key={route.id}\r\n                          exact\r\n                          component={route.component}\r\n                          path={route.path}\r\n                        />\r\n                      ))}\r\n                    </EditTaskContextProvider>\r\n                  </Switch>\r\n                </AnimatePresence>\r\n              )}\r\n            />\r\n          </DoneTasksProvider>\r\n        </TaskContextProvider>\r\n      </main>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./ToDoList\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}